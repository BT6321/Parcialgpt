


package Dominio;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

public class Sistema {
    private ArrayList<Jugador> jugadores;

    public Sistema() {
        this.jugadores = new ArrayList<>();
    }

    public void agregarJugador(Jugador jugador) {
        jugadores.add(jugador);
    }

    public void mostrarRanking() {
        // Ordenar jugadores por cantidad de victorias en orden decreciente
        Collections.sort(jugadores, Comparator.comparingInt(Jugador::getVictorias).reversed());

        System.out.println("Ranking:");
        for (int i = 0; i < jugadores.size(); i++) {
            Jugador jugador = jugadores.get(i);
            System.out.printf("%d %s | %s%n", i + 1, jugador.getAlias(), "#".repeat(jugador.getVictorias()));
        }
    }
}


version 2 de ranking con modificaciones 
package Dominio;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

public class Sistema {
    private List<Jugador> jugadores;

    public Sistema() {
        jugadores = new ArrayList<>();
    }

    public void agregarJugador(Jugador jugador) {
        jugadores.add(jugador);
    }

    public void mostrarRanking() {
        jugadores.sort(Comparator.comparingInt(Jugador::getVictorias).reversed());
        
        System.out.println("----- RANKING -----");
        for (int i = 0; i < jugadores.size(); i++) {
            Jugador jugador = jugadores.get(i);
            System.out.println((i + 1) + ". " + jugador.getAlias() + " | " + "#".repeat(jugador.getVictorias()));
        }
    }

    public void jugarContraJugador() {
        // Lógica para jugar contra otro jugador
        // Este método debe interactuar con las clases necesarias para iniciar el juego
    }

    public void jugarContraComputadora() {
        // Lógica para jugar contra la computadora
        // Este método debe interactuar con las clases necesarias para iniciar el juego
    }
}
